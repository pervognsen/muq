#! /bin/sh

if [ "$#" -ne 1 ] ; then
    if [ "$#" -ne 0 ] ; then
        echo "Usage: muq-std-checkmuf logfile"
        echo "(Runs standard muq selfcheck code.)"
        exit 1
    else
        checklog=/dev/null
    fi
else
    checklog=$1
fi

# Source config file specifying directory layout:
. ${MUQDIR-${HOME}/muq/bin}/Muq-config.sh

cd $cdir/#check.tmp#

# Re-initialize db:
rm -rf check*db*
$bindir/muq-copy-db `pwd` Clean check

# Check that $pkgdir/Check exists:
if [ -d $pkgdir/Check ]
then

    # Do the MUF tests involving one server:
    if [   -f $pkgdir/Check/tmp.muf ] ; then
        rm -f $pkgdir/Check/tmp.muf   ; fi
    touch  -f $pkgdir/Check/tmp.muf
    for i  in $pkgdir/Check/x-*.muf ;
    {
	echo ""                                        >>$pkgdir/Check/tmp.muf
# echo "rootCollectGarbage"                    >>$pkgdir/Check/tmp.muf
	echo "muf:regressionTestReport"               >>$pkgdir/Check/tmp.muf
	echo "muf:regressionTestReset"                >>$pkgdir/Check/tmp.muf
	# Unportable is:   echo "\n\n..."
	echo ""                                        >>$pkgdir/Check/tmp.muf
	echo ""                                        >>$pkgdir/Check/tmp.muf
	echo "\"\\n\\nRunning testfile $i\" ,"         >>$pkgdir/Check/tmp.muf
        # Reset compiler line count, so error messages
        # come out relative to start of original file
        # instead of relative to start of tmp.t:
        echo '-1 --> @$s.standardInput$s.twin$s.line' >>$pkgdir/Check/tmp.muf
	cat $i                                         >>$pkgdir/Check/tmp.muf
    }
    $cdir/muq	check			\
	 -x muf:compileMufFile		\
	 -f $pkgdir/Check/begin.muf	\
	 -f $pkgdir/Check/tmp.muf	\
	 -f $pkgdir/Check/end.muf	\
	 --logfile=muq.log		\
    | tee -a $checklog
    if [ $? -ne 0 ] ; then
	exit 1
    fi
    # Above doesn't seem to detect Muq crashing.
    # Prolly 'cause we get exit status of 'tee'.
    # So, assume it crashed if we see check-0v0:
    if [ -f check-RUNNING-ROOTDB.muq ] ; then
	exit 1
    fi
    rm -f $pkgdir/Check/tmp.muf

    # Do the MUC tests involving one server:
    if [   -f $pkgdir/Check/tmp.muc ] ; then
        rm -f $pkgdir/Check/tmp.muc   ; fi
    touch  -f $pkgdir/Check/tmp.muc
    for i  in $pkgdir/Check/x-*.muc ;
    {
	echo ""                                        >>$pkgdir/Check/tmp.muc
# echo "rootCollectGarbage"                    >>$pkgdir/Check/tmp.muc
#	echo "muf:regressionTestReport"               >>$pkgdir/Check/tmp.muc
#	echo "muf:regressionTestReset"                >>$pkgdir/Check/tmp.muc
	# Unportable is:   echo "\n\n..."
	echo ""                                        >>$pkgdir/Check/tmp.muc
	echo ""                                        >>$pkgdir/Check/tmp.muc
#	echo "\"\\n\\nRunning testfile $i\" ,"         >>$pkgdir/Check/tmp.muc
        # Reset compiler line count, so error messages
        # come out relative to start of original file
        # instead of relative to start of tmp.t:
#       echo '-1 --> @$s.standardInput$s.twin$s.line' >>$pkgdir/Check/tmp.muc
	cat $i                                         >>$pkgdir/Check/tmp.muc
    }
    $cdir/muq	check			\
	 -x muc:compileMucFile		\
	 -f $pkgdir/Check/tmp.muc	\
	 -f $pkgdir/Check/end.muc	\
	 --logfile=muq.log		\
    | tee -a $checklog
    if [ $? -ne 0 ] ; then
	exit 1
    fi
    # Above doesn't seem to detect Muq crashing.
    # Prolly 'cause we get exit status of 'tee'.
    # So, assume it crashed if we see check-0v0:
    if [ -f check-RUNNING-ROOTDB.muq ] ; then
	exit 1
    fi
    rm -f $pkgdir/Check/tmp.muc

#   This is the old code, much slower because it
#   starts up the server for every testfile:
#    # Execute $pkgdir/Check/x-*muf:
#    for i in $pkgdir/Check/x-*muf ;
#    {
#      echo ""	# Unportable is:   echo "\n\n..."
#      echo ""
#      echo "Running testfile $i..."
#      $cdir/muq	check			\
#	 -x muf:compileMufFile	\
#	 -f $pkgdir/Check/begin.muf	\
#	 -f $i				\
#	 -f $pkgdir/Check/end.muf	\
#      | tee -a $checklog
#      if [ $? -ne 0 ]
#      then
#	exit 1
#      fi
#      # Above doesn't seem to detect Muq crashing.
#      # Prolly 'cause we get exit status of 'tee'.
#      # So, assume it crashed if we see check0:
#      if [ -f check-RUNNING-ROOTDB.muq ]
#      then
#	exit 1
#      fi
#    }

     # Do the tests involving two servers:
     ${MUQDIR-${HOME}/muq/bin}/muq-std-checkmuf-xx $checklog

     # Do the tests involving three servers:
     ${MUQDIR-${HOME}/muq/bin}/muq-std-checkmuf-xxx $checklog

else
   echo "No $pkgdir/Check exists!"
   exit 1
fi

exit 0


