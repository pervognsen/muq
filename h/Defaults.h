
/*--   Defaults.h -- Global customizations for Muq.			*/
/* This file is formatted for emacs' outline-minor-mode.		*/

#ifndef INCLUDED_DEFAULTS_H
#define INCLUDED_DEFAULTS_H



/************************************************************************/
/* This file exists to hold commonly customized Muq			*/
/* macros.  Many more customizable macros exist in			*/
/* the various .c files, which you are also welcome			*/
/* to customize for your site;  This file is intended			*/
/* only to present those most likely to be of interest.			*/
/*									*/
/*          ---> DO NOT EDIT THIS FILE! <---				*/
/*									*/
/* Any customizations you can accomplish by editing this		*/
/* file, you can accomplish by editing Site-config.h, which		*/
/* exists specifically to hold your local site configuration.		*/
/*									*/
/* Putting all your customizations in Site-config.h will make		*/
/* life _much_ easier for you when you upgrade to the next		*/
/* version of Muq.  If you see a value you'd like to customize		*/
/* in here, or in any other file, just copy the #define in		*/
/* questions to Site-config.h, and then edit it there.	(If		*/
/* that doesn't work, report it as a bug.)				*/
/*									*/
/************************************************************************/

/************************************************************/
/* rusage() is a handy function which returns statistics    */
/* on paging performance and such:  sys.c serves (in part)  */
/* as an interface to it, displaying the results as object  */
/* properties accessable from the db.  rusage() is a BSD    */
/* facility which is supported on many but not all systems; */
/* if your system lacks it, or you have trouble getting it  */
/* to link or operate correctly, you may want to set        */
/* MUQ_USE_RUSAGE to FALSE, which will result in sys.c	    */
/* returning dummy values for these properties.             */
/************************************************************/
/* #define MUQ_USE_RUSAGE FALSE */

/************************************************************************/
/* Size of virtual ram buffer to store in-memory objects in.		*/
/* Should be at least a meg these days, two meg seems a			*/
/* reasonable default.  Needs to be a power of two currently.		*/
/* 									*/
/* This value can be modified online via /sys/dbBufSize,		*/
/* but size of the hashtable indexing the buffer is fixed		*/
/* at compiletime for efficiency:  It is best to have			*/
/* VM_INITIAL_BIGBUF_SIZE #defined correctly for your system.		*/
/************************************************************************/
#ifndef VM_INITIAL_BIGBUF_SIZE	
#define VM_INITIAL_BIGBUF_SIZE (0x800000)
#endif

/* Support for transparent networking. */
/* Some experimental servers may wish  */
/* to disable this to save 8 bytes per */
/* db object:  Most systems will want  */
/* to enable this, however:            */
#ifndef MUQ_NETWORKING
#define MUQ_NETWORKING (1)
#endif

/*  The NET2 initializer value leaves   */
/* five bits at the low end for a time- */
/* to-cache value:			*/
#ifndef MUQ_NET2_RESERVED_BITS
#define MUQ_NET2_RESERVED_BITS (15)
#endif


/************************************************************************/
/*- File variables							*/
#endif /* INCLUDED_SITE_CONFIG_H */
/*

Local variables:
mode: outline-minor
outline-regexp: "[ \\t]*\/\\*-"
End:
*/

